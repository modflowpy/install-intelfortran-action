name: Install Intel Fortran
description: Install & cache Intel Fortran compiler and configure environment for its use
runs:
  using: composite
  steps:
    - name: Set install path variables
      if: runner.os != 'Windows'
      shell: bash
      run: |
        echo "ONEAPI_INSTALL_PATH=/opt/intel/oneapi" >> $GITHUB_ENV

    - name: Set install path variables (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        echo "ONEAPI_INSTALL_PATH=C:\Program Files (x86)\Intel\oneAPI" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Set install resource variables (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        echo "ONEAPI_LINUX_URL=https://registrationcenter-download.intel.com/akdlm/irc_nas/18679/l_HPCKit_p_2022.2.0.191_offline.sh" >> $GITHUB_ENV
        echo "ONEAPI_LINUX_COMPONENTS=intel.oneapi.lin.ifort-compiler" >> $GITHUB_ENV

    - name: Set install resource variables (Mac)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        echo "ONEAPI_MAC_URL=https://registrationcenter-download.intel.com/akdlm/IRC_NAS/18681/m_HPCKit_p_2022.2.0.158_offline.dmg" >> $GITHUB_ENV
        echo "ONEAPI_MAC_COMPONENTS=intel.oneapi.mac.ifort-compiler" >> $GITHUB_ENV

    - name: Set install resource variables (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        echo "ONEAPI_WINDOWS_URL=https://registrationcenter-download.intel.com/akdlm/IRC_NAS/18680/w_HPCKit_p_2022.2.0.173_offline.exe" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "ONEAPI_WINDOWS_COMPONENTS=intel.oneapi.win.ifort-compiler" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Cache ifort (Linux)
      if: runner.os == 'Linux'
      uses: actions/cache@v3
      with:
        path: ${{ env.ONEAPI_INSTALL_PATH }}
        key: ifort-${{ runner.os }}-${{ env.ONEAPI_LINUX_URL }}-${{ env.ONEAPI_LINUX_COMPONENTS }}

    - name: Cache ifort (Mac)
      if: runner.os == 'macOS'
      uses: actions/cache@v3
      with:
        path: ${{ env.ONEAPI_INSTALL_PATH }}
        key: ifort-${{ runner.os }}-${{ env.ONEAPI_MAC_URL }}-${{ env.ONEAPI_MAC_COMPONENTS }}

    - name: Cache ifort (Windows)
      if: runner.os == 'Windows'
      uses: actions/cache@v3
      with:
        path: C:\Program Files (x86)\Intel\oneAPI
        key: ifort-${{ runner.os }}-${{ env.ONEAPI_WINDOWS_URL }}-${{ env.ONEAPI_WINDOWS_COMPONENTS }}

    - name: Install ifort (Linux)
      if: runner.os == 'Linux' && steps.cache-install-linux.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd ${{ github.action_path }}
        ./scripts/install_linux.sh ${{ env.ONEAPI_LINUX_URL }} ${{ env.ONEAPI_LINUX_COMPONENTS }}

    - name: Install ifort (Mac)
      if: runner.os == 'macOS' && steps.cache-install-macos.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd ${{ github.action_path }}
        ./scripts/install_mac.sh ${{ env.ONEAPI_MAC_URL }} ${{ env.ONEAPI_MAC_COMPONENTS }}

    - name: Install ifort (Windows)
      if: runner.os == 'Windows' && steps.cache-install-windows.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        call "%GITHUB_ACTION_PATH%\scripts\install_windows.bat" %ONEAPI_WINDOWS_URL% %ONEAPI_WINDOWS_COMPONENTS%

    - name: Exclude unused files from cache (Linux)
      if: runner.os == 'Linux' && steps.cache-install-linux.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd ${{ github.action_path }}
        ./scripts/cache_exclude_linux.sh

    - name: Configure environment (Linux & Mac)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        source /opt/intel/oneapi/setvars.sh
        env | grep oneapi >> $GITHUB_ENV

    - name: Configure environment (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat"
        call "C:\Program Files (x86)\Intel\oneAPI\compiler\latest\env\vars.bat"
        set | findstr /c:"oneAPI" >> %GITHUB_ENV%
